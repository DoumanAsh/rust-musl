name: Docker

on:
  # Once a week
  schedule:
    - cron: '0 0 * * 0'
  push:
    paths:
      - 'Dockerfile'
      - 'config.toml'
      - '.github/workflows/docker-image.yml'
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - '**'
    paths:
      - 'Dockerfile'
      - 'config.toml'
      - '.github/workflows/docker-image.yml'

env:
  REGISTRY: docker.io
  IMAGE_NAME: douman/rust-musl

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: douman
          ## Set in repo Settings->Secrets->New repository secret
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        id: build-docker
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          load: true
          tags: ${{ env.IMAGE_NAME }}:latest

      - name: Test
        id: test
        run: |
          VERSION=$(docker run --rm ${{ env.IMAGE_NAME }} rustc --version | cut -d" " -f2)
          echo "::notice ::Rust version $VERSION"
          echo "rustc_version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Push Docker image
        id: push-docker
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.IMAGE_NAME }}:latest , ${{ env.IMAGE_NAME }}:${{ steps.test.outputs.rustc_version }}
